From 2a60aac5a7f0095d3ea91ab5888864014546489e Mon Sep 17 00:00:00 2001
From: "Brian J. Burg" <burg@cs.washington.edu>
Date: Wed, 11 Mar 2015 15:46:37 -0700
Subject: [PATCH] Convert ElementSnapshotDiffContentView to be a
 ClusterContentView with output, style subviews.

---
 Source/WebInspectorUI/UserInterface/Main.html      |   2 +
 .../UserInterface/Views/ContentView.js             |   2 +-
 .../Views/ElementSnapshotDiffContentView.css       |  16 +++
 .../Views/ElementSnapshotDiffContentView.js        | 150 ++++++++++++++++++++-
 ....js => ElementSnapshotDiffOutputContentView.js} |  26 ++--
 ...w.js => ElementSnapshotDiffStyleContentView.js} |  26 ++--
 .../UserInterface/Views/TimelineIcons.css          |   4 -
 7 files changed, 182 insertions(+), 44 deletions(-)
 copy Source/WebInspectorUI/UserInterface/Views/{ElementSnapshotDiffContentView.js => ElementSnapshotDiffOutputContentView.js} (76%)
 copy Source/WebInspectorUI/UserInterface/Views/{ElementSnapshotDiffContentView.js => ElementSnapshotDiffStyleContentView.js} (76%)

diff --git a/Source/WebInspectorUI/UserInterface/Main.html b/Source/WebInspectorUI/UserInterface/Main.html
index 08cc626..1dc5bf0 100644
--- a/Source/WebInspectorUI/UserInterface/Main.html
+++ b/Source/WebInspectorUI/UserInterface/Main.html
@@ -394,20 +394,22 @@
     <script src="Views/DetailsSection.js"></script>
     <script src="Views/DetailsSectionDataGridRow.js"></script>
     <script src="Views/DetailsSectionGroup.js"></script>
     <script src="Views/DetailsSectionPropertiesRow.js"></script>
     <script src="Views/DetailsSectionSimpleRow.js"></script>
     <script src="Views/DetailsSectionTextRow.js"></script>
     <script src="Views/DividerNavigationItem.js"></script>
     <script src="Views/EditingSupport.js"></script>
     <script src="Views/ElementSnapshotContentView.js"></script>
     <script src="Views/ElementSnapshotDiffContentView.js"></script>
+    <script src="Views/ElementSnapshotDiffOutputContentView.js"></script>
+    <script src="Views/ElementSnapshotDiffStyleContentView.js"></script>
     <script src="Views/ElementSnapshotOutputContentView.js"></script>
     <script src="Views/ElementSnapshotStyleContentView.js"></script>
     <script src="Views/ElementTrackingTimelineDataGridNode.js"></script>
     <script src="Views/ElementTrackingTimelineView.js"></script>
     <script src="Views/ElementTrackingTimelineOverviewGraph.js"></script>
     <script src="Views/EventListenerSection.js"></script>
     <script src="Views/EventListenerSectionGroup.js"></script>
     <script src="Views/FilterBar.js"></script>
     <script src="Views/FindBanner.js"></script>
     <script src="Views/FlexibleSpaceNavigationItem.js"></script>
diff --git a/Source/WebInspectorUI/UserInterface/Views/ContentView.js b/Source/WebInspectorUI/UserInterface/Views/ContentView.js
index 5f1c1b6..ac422df 100644
--- a/Source/WebInspectorUI/UserInterface/Views/ContentView.js
+++ b/Source/WebInspectorUI/UserInterface/Views/ContentView.js
@@ -96,21 +96,21 @@ WebInspector.ContentView = function(representedObject)
         if (typeof representedObject === "string" || representedObject instanceof String)
             return new WebInspector.TextContentView(representedObject);
 
         console.assert(!WebInspector.ContentView.isViewable(representedObject));
 
         throw "Can't make a ContentView for an unknown representedObject.";
     }
 
     // Concrete object instantiation.
     console.assert(this.constructor !== WebInspector.ContentView && this instanceof WebInspector.ContentView);
-    console.assert(WebInspector.ContentView.isViewable(representedObject));
+    console.assert(WebInspector.ContentView.isViewable(representedObject), representedObject);
 
     WebInspector.Object.call(this);
 
     this._representedObject = representedObject;
 
     this._element = document.createElement("div");
     this._element.classList.add(WebInspector.ContentView.StyleClassName);
 
     this._parentContainer = null;
 };
diff --git a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.css b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.css
index 4d1d342..6bcc32a 100644
--- a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.css
+++ b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.css
@@ -28,10 +28,26 @@
     top: 0;
     bottom: 0;
     left: 0;
     right: 0;
     background-color: #fff;
 }
 
 .content-view.element-snapshot-diff .resizer {
     border-left: 1px solid rgb(179, 179, 179);
 }
+
+.snapshot-diff-icon .icon {
+    content: url(../Images/Diff.svg);
+}
+
+.diff-visual-output-icon > .icon {
+    content: url(../Images/Camera.svg);
+}
+
+.diff-effective-style-icon > .icon {
+    content: url(../Images/NavigationItemBrushAndRuler.svg);
+}
+
+.snapshot-icon > .icon {
+    content: -webkit-image-set(url(../Images/DocumentImage.png) 1x, url(../Images/DocumentImage@2x.png) 2x);
+}
diff --git a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js
index 7fcdfc6..21cb0bb 100644
--- a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js
+++ b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js
@@ -18,66 +18,153 @@
  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 WebInspector.ElementSnapshotDiffContentView = function(snapshotDiff)
 {
-    WebInspector.ContentView.call(this, snapshotDiff);
+    console.assert(snapshotDiff instanceof WebInspector.ElementSnapshotDiff, snapshotDiff);
 
+    WebInspector.ClusterContentView.call(this, snapshotDiff);
+
+    this._snapshotDiff = snapshotDiff;
     this._preState = snapshotDiff.preState;
     this._postState = snapshotDiff.postState;
 
     var displayName = WebInspector.UIString("View Changes (Snapshots %dâ€“%d)").format(this._preState.ordinal, this._postState.ordinal);
     this._pathComponent = new WebInspector.HierarchicalPathComponent(displayName, WebInspector.ElementSnapshotDiffContentView.IconStyleClassName, this, false, false);
 
+    function createClusterPathComponent(displayName, classNames, identifier)
+    {
+        var pathComponent = new WebInspector.HierarchicalPathComponent(displayName, classNames, identifier, false, true);
+        pathComponent.addEventListener(WebInspector.HierarchicalPathComponent.Event.SiblingWasSelected, this._pathComponentSelected, this);
+        return pathComponent;
+    }
+
+    this._outputPathComponent = createClusterPathComponent.call(this, WebInspector.UIString("Visual Output"), WebInspector.ElementSnapshotDiffContentView.VisualOutputIconStyleClassName, WebInspector.ElementSnapshotDiffContentView.VisualOutputIdentifier, false, false);
+    this._stylePathComponent = createClusterPathComponent.call(this, WebInspector.UIString("Effective Style"), WebInspector.ElementSnapshotDiffContentView.EffectiveStyleIconStyleClassName, WebInspector.ElementSnapshotDiffContentView.EffectiveStyleIdentifier, false, false);
+
+    this._outputPathComponent.nextSibling = this._stylePathComponent;
+    this._stylePathComponent.previousSibling = this._outputPathComponent;
+
+    this._currentContentViewSetting = new WebInspector.Setting("element-snapshot-diff-current-view", WebInspector.ElementSnapshotDiffContentView.VisualOutputIdentifier);
+
     this.element.classList.add(WebInspector.ElementSnapshotDiffContentView.StyleClassName);
 
     var resizerDelegate = this;
     this._resizer = new WebInspector.Resizer(WebInspector.Resizer.RuleOrientation.Vertical, resizerDelegate);
     this.element.appendChild(this._resizer.element);
 
     this._preimageElement = document.createElement("img");
     this._preimageElement.className = WebInspector.ElementSnapshotDiffContentView.SplitPaneStyleClassName;
     this._preimageElement.src = this._preState.contentURL;
     this.element.appendChild(this._preimageElement);
 
     this._postimageElement = document.createElement("img");
     this._postimageElement.className = WebInspector.ElementSnapshotDiffContentView.SplitPaneStyleClassName;
     this._postimageElement.src = this._postState.contentURL;
     this.element.appendChild(this._postimageElement);
 
     this._repositionSplitPanes(0.5);
 };
 
-WebInspector.ElementSnapshotDiffContentView.StyleClassName = "element-snapshot-diff";
+WebInspector.ElementSnapshotDiffContentView.VisualOutputIdentifier = "visual-output";
+WebInspector.ElementSnapshotDiffContentView.EffectiveStyleIdentifier = "effective-style";
+
 WebInspector.ElementSnapshotDiffContentView.IconStyleClassName = "snapshot-diff-icon";
+WebInspector.ElementSnapshotDiffContentView.VisualOutputIconStyleClassName = "visual-output-icon";
+WebInspector.ElementSnapshotDiffContentView.EffectiveStyleIconStyleClassName = "effective-style-icon";
+
+WebInspector.ElementSnapshotDiffContentView.StyleClassName = "element-snapshot-diff";
 WebInspector.ElementSnapshotDiffContentView.SplitPaneStyleClassName = "split-pane";
 
 WebInspector.ElementSnapshotDiffContentView.prototype = {
     constructor: WebInspector.ElementSnapshotDiffContentView,
-    __proto__: WebInspector.ContentView.prototype,
+    __proto__: WebInspector.ClusterContentView.prototype,
 
     get selectionPathComponents()
     {
-        return [this._pathComponent];
+        var currentContentView = this._contentViewContainer.currentContentView;
+        if (!currentContentView)
+            return [];
+
+        // Append the current view's path components to the path component representing the snapshot diff.
+        var components = [this._pathComponent, this._pathComponentForContentView(currentContentView)];
+        return components.concat(currentContentView.selectionPathComponents);
     },
 
     // Disallow the quick console from popping up, we need a lot of space.
     get supportsSplitContentBrowser()
     {
         return false;
     },
 
+    get visualOutputContentView()
+    {
+        if (!this._visualOutputContentView)
+            this._visualOutputContentView = new WebInspector.ElementSnapshotDiffOutputContentView(this._snapshotDiff);
+
+        return this._visualOutputContentView;
+    },
+
+    get effectiveStyleContentView()
+    {
+        if (!this._effectiveStyleContentView)
+            this._effectiveStyleContentView = new WebInspector.ElementSnapshotDiffStyleContentView(this._snapshotDiff);
+
+        return this._effectiveStyleContentView;
+    },
+
+    shown: function()
+    {
+        WebInspector.ClusterContentView.prototype.shown.call(this);
+
+        if (this._shownInitialContent)
+            return;
+
+        this._showContentViewForIdentifier(this._currentContentViewSetting.value);
+    },
+
+    closed: function()
+    {
+        WebInspector.ClusterContentView.prototype.closed.call(this);
+
+        this._shownInitialContent = false;
+    },
+
+    saveToCookie: function(cookie)
+    {
+        cookie[WebInspector.ElementSnapshotDiffContentView.ContentViewIdentifierCookieKey] = this._currentContentViewSetting.value;
+    },
+
+    restoreFromCookie: function(cookie)
+    {
+        this._showContentViewForIdentifier(cookie[WebInspector.ElementSnapshotDiffContentView.ContentViewIdentifierCookieKey]);
+    },
+
+    showVisualOutput: function()
+    {
+        this._shownInitialContent = true;
+
+        return this._showContentViewForIdentifier(WebInspector.ElementSnapshotDiffContentView.VisualOutputIdentifier);
+    },
+
+    showEffectiveStyle: function()
+    {
+        this._shownInitialContent = true;
+
+        return this._showContentViewForIdentifier(WebInspector.ElementSnapshotDiffContentView.EffectiveStyleIdentifier);
+    },
+
     // Protected
 
     resizerDragStarted: function(resizer)
     {
         this._centerOffsetBeforeDrag = resizer.initialPosition - this.element.totalOffsetLeft;
     },
 
     resizerDragging: function(resizer, positionDelta)
     {
         var availableWidth = this.element.offsetWidth;
@@ -89,12 +176,65 @@ WebInspector.ElementSnapshotDiffContentView.prototype = {
 
     _repositionSplitPanes: function(centerPercent)
     {
         if (centerPercent === this._centerPercent)
             return;
 
         this._centerPercent = centerPercent || 0.5;
         this._resizer.element.style.left = "%.5f".format(this._centerPercent * 100) + '%';
         this._preimageElement.style.right = "%.5f".format((1.0 - this._centerPercent) * 100) + '%';
         this._postimageElement.style.left = "%.5f".format(this._centerPercent * 100) + '%';
-    }
+    },
+
+    _pathComponentForContentView: function(contentView)
+    {
+        console.assert(contentView);
+        if (!contentView)
+            return null;
+        if (contentView === this._visualOutputContentView)
+            return this._outputPathComponent;
+        if (contentView === this._effectiveStyleContentView)
+            return this._stylePathComponent;
+        console.error("Unknown contentView.");
+        return null;
+    },
+
+    _identifierForContentView: function(contentView)
+    {
+        console.assert(contentView);
+        if (!contentView)
+            return null;
+        if (contentView === this._visualOutputContentView)
+            return WebInspector.ElementSnapshotDiffContentView.VisualOutputIdentifier;
+        if (contentView === this._effectiveStyleContentView)
+            return WebInspector.ElementSnapshotDiffContentView.EffectiveStyleIdentifier;
+        console.error("Unknown contentView.");
+        return null;
+    },
+
+    _showContentViewForIdentifier: function(identifier)
+    {
+        var contentViewToShow = null;
+
+        switch (identifier) {
+        case WebInspector.ElementSnapshotDiffContentView.VisualOutputIdentifier:
+            contentViewToShow = this.visualOutputContentView;
+            break;
+        case WebInspector.ElementSnapshotDiffContentView.EffectiveStyleIdentifier:
+            contentViewToShow = this.effectiveStyleContentView;
+            break;
+        }
+        if (!contentViewToShow)
+            contentViewToShow = this.visualOutputContentView;
+
+        console.assert(contentViewToShow);
+
+        this._currentContentViewSetting.value = this._identifierForContentView(contentViewToShow);
+
+        return this.contentViewContainer.showContentView(contentViewToShow);
+    },
+
+    _pathComponentSelected: function(event)
+    {
+        this._showContentViewForIdentifier(event.data.pathComponent.representedObject);
+    },
 };
diff --git a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffOutputContentView.js
similarity index 76%
copy from Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js
copy to Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffOutputContentView.js
index 7fcdfc6..aeaea37 100644
--- a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js
+++ b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffOutputContentView.js
@@ -16,62 +16,54 @@
  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
-WebInspector.ElementSnapshotDiffContentView = function(snapshotDiff)
+WebInspector.ElementSnapshotDiffOutputContentView = function(snapshotDiff)
 {
     WebInspector.ContentView.call(this, snapshotDiff);
 
     this._preState = snapshotDiff.preState;
     this._postState = snapshotDiff.postState;
 
-    var displayName = WebInspector.UIString("View Changes (Snapshots %dâ€“%d)").format(this._preState.ordinal, this._postState.ordinal);
-    this._pathComponent = new WebInspector.HierarchicalPathComponent(displayName, WebInspector.ElementSnapshotDiffContentView.IconStyleClassName, this, false, false);
-
-    this.element.classList.add(WebInspector.ElementSnapshotDiffContentView.StyleClassName);
+    this.element.classList.add(WebInspector.ElementSnapshotDiffOutputContentView.StyleClassName);
 
     var resizerDelegate = this;
     this._resizer = new WebInspector.Resizer(WebInspector.Resizer.RuleOrientation.Vertical, resizerDelegate);
     this.element.appendChild(this._resizer.element);
 
     this._preimageElement = document.createElement("img");
-    this._preimageElement.className = WebInspector.ElementSnapshotDiffContentView.SplitPaneStyleClassName;
+    this._preimageElement.className = WebInspector.ElementSnapshotDiffOutputContentView.SplitPaneStyleClassName;
     this._preimageElement.src = this._preState.contentURL;
     this.element.appendChild(this._preimageElement);
 
     this._postimageElement = document.createElement("img");
-    this._postimageElement.className = WebInspector.ElementSnapshotDiffContentView.SplitPaneStyleClassName;
+    this._postimageElement.className = WebInspector.ElementSnapshotDiffOutputContentView.SplitPaneStyleClassName;
     this._postimageElement.src = this._postState.contentURL;
     this.element.appendChild(this._postimageElement);
 
     this._repositionSplitPanes(0.5);
 };
 
-WebInspector.ElementSnapshotDiffContentView.StyleClassName = "element-snapshot-diff";
-WebInspector.ElementSnapshotDiffContentView.IconStyleClassName = "snapshot-diff-icon";
-WebInspector.ElementSnapshotDiffContentView.SplitPaneStyleClassName = "split-pane";
+WebInspector.ElementSnapshotDiffOutputContentView.StyleClassName = "element-snapshot-diff-visual-output";
+WebInspector.ElementSnapshotDiffOutputContentView.IconStyleClassName = "diff-visual-output-icon";
+WebInspector.ElementSnapshotDiffOutputContentView.SplitPaneStyleClassName = "split-pane";
 
-WebInspector.ElementSnapshotDiffContentView.prototype = {
-    constructor: WebInspector.ElementSnapshotDiffContentView,
+WebInspector.ElementSnapshotDiffOutputContentView.prototype = {
+    constructor: WebInspector.ElementSnapshotDiffOutputContentView,
     __proto__: WebInspector.ContentView.prototype,
 
-    get selectionPathComponents()
-    {
-        return [this._pathComponent];
-    },
-
     // Disallow the quick console from popping up, we need a lot of space.
     get supportsSplitContentBrowser()
     {
         return false;
     },
 
     // Protected
 
     resizerDragStarted: function(resizer)
     {
diff --git a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffStyleContentView.js
similarity index 76%
copy from Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js
copy to Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffStyleContentView.js
index 7fcdfc6..7e2ab20 100644
--- a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffContentView.js
+++ b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotDiffStyleContentView.js
@@ -16,62 +16,54 @@
  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
-WebInspector.ElementSnapshotDiffContentView = function(snapshotDiff)
+WebInspector.ElementSnapshotDiffStyleContentView = function(snapshotDiff)
 {
     WebInspector.ContentView.call(this, snapshotDiff);
 
     this._preState = snapshotDiff.preState;
     this._postState = snapshotDiff.postState;
 
-    var displayName = WebInspector.UIString("View Changes (Snapshots %dâ€“%d)").format(this._preState.ordinal, this._postState.ordinal);
-    this._pathComponent = new WebInspector.HierarchicalPathComponent(displayName, WebInspector.ElementSnapshotDiffContentView.IconStyleClassName, this, false, false);
-
-    this.element.classList.add(WebInspector.ElementSnapshotDiffContentView.StyleClassName);
+    this.element.classList.add(WebInspector.ElementSnapshotDiffStyleContentView.StyleClassName);
 
     var resizerDelegate = this;
     this._resizer = new WebInspector.Resizer(WebInspector.Resizer.RuleOrientation.Vertical, resizerDelegate);
     this.element.appendChild(this._resizer.element);
 
     this._preimageElement = document.createElement("img");
-    this._preimageElement.className = WebInspector.ElementSnapshotDiffContentView.SplitPaneStyleClassName;
+    this._preimageElement.className = WebInspector.ElementSnapshotDiffStyleContentView.SplitPaneStyleClassName;
     this._preimageElement.src = this._preState.contentURL;
     this.element.appendChild(this._preimageElement);
 
     this._postimageElement = document.createElement("img");
-    this._postimageElement.className = WebInspector.ElementSnapshotDiffContentView.SplitPaneStyleClassName;
+    this._postimageElement.className = WebInspector.ElementSnapshotDiffStyleContentView.SplitPaneStyleClassName;
     this._postimageElement.src = this._postState.contentURL;
     this.element.appendChild(this._postimageElement);
 
     this._repositionSplitPanes(0.5);
 };
 
-WebInspector.ElementSnapshotDiffContentView.StyleClassName = "element-snapshot-diff";
-WebInspector.ElementSnapshotDiffContentView.IconStyleClassName = "snapshot-diff-icon";
-WebInspector.ElementSnapshotDiffContentView.SplitPaneStyleClassName = "split-pane";
+WebInspector.ElementSnapshotDiffStyleContentView.StyleClassName = "element-snapshot-diff-effective-style";
+WebInspector.ElementSnapshotDiffStyleContentView.IconStyleClassName = "diff-effective-style-icon";
+WebInspector.ElementSnapshotDiffStyleContentView.SplitPaneStyleClassName = "split-pane";
 
-WebInspector.ElementSnapshotDiffContentView.prototype = {
-    constructor: WebInspector.ElementSnapshotDiffContentView,
+WebInspector.ElementSnapshotDiffStyleContentView.prototype = {
+    constructor: WebInspector.ElementSnapshotDiffStyleContentView,
     __proto__: WebInspector.ContentView.prototype,
 
-    get selectionPathComponents()
-    {
-        return [this._pathComponent];
-    },
-
     // Disallow the quick console from popping up, we need a lot of space.
     get supportsSplitContentBrowser()
     {
         return false;
     },
 
     // Protected
 
     resizerDragStarted: function(resizer)
     {
diff --git a/Source/WebInspectorUI/UserInterface/Views/TimelineIcons.css b/Source/WebInspectorUI/UserInterface/Views/TimelineIcons.css
index 7e3904a..b1f4f6f 100644
--- a/Source/WebInspectorUI/UserInterface/Views/TimelineIcons.css
+++ b/Source/WebInspectorUI/UserInterface/Views/TimelineIcons.css
@@ -103,14 +103,10 @@ body.mac-platform.legacy .colors-icon.large .icon {
     content: -webkit-image-set(url(../Images/DocumentImage.png) 1x, url(../Images/DocumentImage@2x.png) 2x);
 }
 
 .timer-record .icon {
     content: url(../Images/TimelineRecordTimer.svg);
 }
 
 .animation-record .icon {
     content: url(../Images/TimelineRecordAnimation.svg);
 }
-
-.snapshot-diff-icon .icon {
-    content: url(../Images/Diff.svg);
-}
-- 
2.3.2

