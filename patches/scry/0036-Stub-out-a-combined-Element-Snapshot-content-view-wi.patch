From f37f945b2ad6e32df5e56602880453e271561d55 Mon Sep 17 00:00:00 2001
From: "Brian J. Burg" <burg@cs.washington.edu>
Date: Tue, 31 Mar 2015 10:13:38 -0700
Subject: [PATCH] Stub out a combined Element Snapshot content view with 3
 panes.

Make output content view align its screenshot to the top edge.
---
 .../Localizations/en.lproj/localizedStrings.js     | Bin 63130 -> 63248 bytes
 Source/WebInspectorUI/UserInterface/Main.html      |   2 +
 ....css => ElementSnapshotCombinedContentView.css} |  20 ++--
 .../Views/ElementSnapshotCombinedContentView.js    | 115 +++++++++++++++++++++
 .../Views/ElementSnapshotContentView.css           |   4 +
 .../Views/ElementSnapshotContentView.js            |  31 +++++-
 .../Views/ElementSnapshotOutputContentView.css     |   2 +-
 7 files changed, 159 insertions(+), 15 deletions(-)
 copy Source/WebInspectorUI/UserInterface/Views/{ElementSnapshotContentView.css => ElementSnapshotCombinedContentView.css} (78%)
 create mode 100644 Source/WebInspectorUI/UserInterface/Views/ElementSnapshotCombinedContentView.js

diff --git a/Source/WebInspectorUI/Localizations/en.lproj/localizedStrings.js b/Source/WebInspectorUI/Localizations/en.lproj/localizedStrings.js
index d4f3e66c84e59f9cf39543d8b9f1ba7a16c2ff68..b09db697bd801dd11b9f27040b59710e5a5084eb 100644
GIT binary patch
delta 46
qcmbRBmU+TE<_&gfyul2442cW{48;r?4Ed8ErpTj;Y-UWGIROA=4GwGo

delta 22
ecmbR6j(OHw<_&gflkcSoOioLZ+I%m~XaWFyTncpn

diff --git a/Source/WebInspectorUI/UserInterface/Main.html b/Source/WebInspectorUI/UserInterface/Main.html
index 1b632dd..f0c7142 100644
--- a/Source/WebInspectorUI/UserInterface/Main.html
+++ b/Source/WebInspectorUI/UserInterface/Main.html
@@ -69,20 +69,21 @@
     <link rel="stylesheet" href="Views/DataGrid.css">
     <link rel="stylesheet" href="Views/DatabaseContentView.css">
     <link rel="stylesheet" href="Views/DatabaseIcon.css">
     <link rel="stylesheet" href="Views/DatabaseTableContentView.css">
     <link rel="stylesheet" href="Views/DatabaseTableIcon.css">
     <link rel="stylesheet" href="Views/DebuggerSidebarPanel.css">
     <link rel="stylesheet" href="Views/DetailsSection.css">
     <link rel="stylesheet" href="Views/DividerNavigationItem.css">
     <link rel="stylesheet" href="Views/Editing.css">
     <link rel="stylesheet" href="Views/ElementSnapshotContentView.css">
+    <link rel="stylesheet" href="Views/ElementSnapshotCombinedContentView.css">
     <link rel="stylesheet" href="Views/ElementSnapshotDiffContentView.css">
     <link rel="stylesheet" href="Views/ElementSnapshotOutputContentView.css">
     <link rel="stylesheet" href="Views/ElementSnapshotStyleContentView.css">
     <link rel="stylesheet" href="Views/ElementTrackingTimelineOverviewGraph.css">
     <link rel="stylesheet" href="Views/EventListenerSectionGroup.css">
     <link rel="stylesheet" href="Views/FilterBar.css">
     <link rel="stylesheet" href="Views/FindBanner.css">
     <link rel="stylesheet" href="Views/FlexibleSpaceNavigationItem.css">
     <link rel="stylesheet" href="Views/FolderIcon.css">
     <link rel="stylesheet" href="Views/FontResourceContentView.css">
@@ -407,20 +408,21 @@
     <script src="Views/DatabaseContentView.js"></script>
     <script src="Views/DatabaseHostTreeElement.js"></script>
     <script src="Views/DatabaseTableContentView.js"></script>
     <script src="Views/DatabaseTableTreeElement.js"></script>
     <script src="Views/DatabaseTreeElement.js"></script>
     <script src="Views/DebuggerDashboardView.js"></script>
     <script src="Views/DebuggerSidebarPanel.js"></script>
     <script src="Views/DefaultDashboardView.js"></script>
     <script src="Views/DividerNavigationItem.js"></script>
     <script src="Views/EditingSupport.js"></script>
+    <script src="Views/ElementSnapshotCombinedContentView.js"></script>
     <script src="Views/ElementSnapshotContentView.js"></script>
     <script src="Views/ElementSnapshotDiffContentView.js"></script>
     <script src="Views/ElementSnapshotDiffDOMTreeContentView.js"></script>
     <script src="Views/ElementSnapshotDiffOutputContentView.js"></script>
     <script src="Views/ElementSnapshotDiffStyleContentView.js"></script>
     <script src="Views/ElementSnapshotDOMTreeContentView.js"></script>
     <script src="Views/ElementSnapshotOutputContentView.js"></script>
     <script src="Views/ElementSnapshotStyleContentView.js"></script>
     <script src="Views/ElementTrackingTimelineDataGridNode.js"></script>
     <script src="Views/ElementTrackingTimelineView.js"></script>
diff --git a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.css b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotCombinedContentView.css
similarity index 78%
copy from Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.css
copy to Source/WebInspectorUI/UserInterface/Views/ElementSnapshotCombinedContentView.css
index 4ca7950..f4a8156 100644
--- a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.css
+++ b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotCombinedContentView.css
@@ -16,25 +16,21 @@
  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
  * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
-.visual-output-icon > .icon {
-    content: url(../Images/Camera.svg);
+.content-view.combined-snapshot-view > .content-view {
+    position: absolute;
+    left: 0;
+    right: 0;
+    top: 0;
+    bottom: 0;
 }
 
-.effective-style-icon > .icon {
-    content: url(../Images/NavigationItemBrushAndRuler.svg);
-}
-
-.dom-tree-icon > .icon {
-    content: url(../Images/DOMTree.svg);
-}
-
-.snapshot-icon > .icon {
-    content: -webkit-image-set(url(../Images/DocumentImage.png) 1x, url(../Images/DocumentImage@2x.png) 2x);
+.content-view.combined-snapshot-view .resizer {
+    border-left: 1px solid rgb(179, 179, 179);
 }
diff --git a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotCombinedContentView.js b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotCombinedContentView.js
new file mode 100644
index 0000000..fb600f3
--- /dev/null
+++ b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotCombinedContentView.js
@@ -0,0 +1,115 @@
+/*
+ * Copyright (C) 2015 University of Washington. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
+ * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
+ * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+WebInspector.ElementSnapshotCombinedContentView = function(snapshot)
+{
+    WebInspector.ContentView.call(this, snapshot);
+
+    this.element.classList.add(WebInspector.ElementSnapshotCombinedContentView.StyleClassName);
+
+    var resizerDelegate = this;
+    this._leftResizer = new WebInspector.Resizer(WebInspector.Resizer.RuleOrientation.Vertical, resizerDelegate);
+    this.element.appendChild(this._leftResizer.element);
+    this._rightResizer = new WebInspector.Resizer(WebInspector.Resizer.RuleOrientation.Vertical, resizerDelegate);
+    this.element.appendChild(this._rightResizer.element);
+
+    this._outputContentView = new WebInspector.ElementSnapshotOutputContentView(snapshot);
+    this.element.appendChild(this._outputContentView.element);
+
+    this._domTreeContentView = new WebInspector.ElementSnapshotDOMTreeContentView(snapshot);
+    this.element.appendChild(this._domTreeContentView.element);
+
+    this._styleContentView = new WebInspector.ElementSnapshotStyleContentView(snapshot);
+    this.element.appendChild(this._styleContentView.element);
+
+    this._repositionResizers(0.3, 0.7);
+};
+
+WebInspector.ElementSnapshotCombinedContentView.StyleClassName = "combined-snapshot-view";
+WebInspector.ElementSnapshotCombinedContentView.IconStyleClassName = "combined-snapshot-view-icon";
+WebInspector.ElementSnapshotCombinedContentView.SplitPaneStyleClassName = "split-pane";
+
+WebInspector.ElementSnapshotCombinedContentView.prototype = {
+    constructor: WebInspector.ElementSnapshotCombinedContentView,
+    __proto__: WebInspector.ContentView.prototype,
+
+    // Disallow the quick console from popping up, we need a lot of space.
+    get supportsSplitContentBrowser()
+    {
+        return false;
+    },
+
+    // Protected
+
+    resizerDragStarted: function(resizer)
+    {
+        this._resizerOffsetWhenDragStarted = resizer.initialPosition - this.element.totalOffsetLeft;
+    },
+
+    resizerDragging: function(resizer, positionDelta)
+    {
+        var resizerDragPercent = (this._resizerOffsetWhenDragStarted - positionDelta) / this.element.offsetWidth;
+        if (resizer === this._leftResizer)
+            this._repositionResizers(Number.constrain(resizerDragPercent, 0.01, this._rightResizerPercent - 0.01), this._rightResizerPercent);
+        else if (resizer === this._rightResizer)
+            this._repositionResizers(this._leftResizerPercent, Number.constrain(resizerDragPercent, this._leftResizerPercent + 0.01, 0.99));
+     },
+
+    shown: function()
+    {
+        WebInspector.ContentView.prototype.shown.call(this);
+        this._outputContentView.shown();
+        this._domTreeContentView.shown();
+        this._styleContentView.shown();
+    },
+
+    updateLayout: function()
+    {
+        WebInspector.ContentView.prototype.updateLayout.call(this);
+        this._outputContentView.updateLayout();
+        this._domTreeContentView.updateLayout();
+        this._styleContentView.updateLayout();
+    },
+
+    // Private
+
+    _repositionResizers: function(leftResizerPercent, rightResizerPercent)
+    {
+        if (leftResizerPercent === this._leftResizerPercent && rightResizerPercent === this._rightResizerPercent)
+            return;
+
+        this._leftResizerPercent = leftResizerPercent || 0.3;
+        this._rightResizerPercent = rightResizerPercent || 0.7;
+        this._leftResizer.element.style.left = "%.5f".format(this._leftResizerPercent * 100) + '%';
+        this._rightResizer.element.style.left = "%.5f".format(this._rightResizerPercent * 100) + '%';
+
+        this._outputContentView.element.style.right = "%.5f".format((1.0 - this._leftResizerPercent) * 100) + '%';
+        this._domTreeContentView.element.style.left = "%.5f".format(this._leftResizerPercent * 100) + '%';
+        this._domTreeContentView.element.style.right = "%.5f".format((1.0 - this._rightResizerPercent) * 100) + '%';
+        this._styleContentView.element.style.left = "%.5f".format(this._rightResizerPercent * 100) + '%';
+
+        this.updateLayout();
+    }
+};
diff --git a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.css b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.css
index 4ca7950..83d0026 100644
--- a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.css
+++ b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.css
@@ -20,20 +20,24 @@
  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 .visual-output-icon > .icon {
     content: url(../Images/Camera.svg);
 }
 
+.combined-view-icon > .icon {
+    content: url(../Images/Camera.svg);
+}
+
 .effective-style-icon > .icon {
     content: url(../Images/NavigationItemBrushAndRuler.svg);
 }
 
 .dom-tree-icon > .icon {
     content: url(../Images/DOMTree.svg);
 }
 
 .snapshot-icon > .icon {
     content: -webkit-image-set(url(../Images/DocumentImage.png) 1x, url(../Images/DocumentImage@2x.png) 2x);
diff --git a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.js b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.js
index db6124c..f03d585 100644
--- a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.js
+++ b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotContentView.js
@@ -30,61 +30,74 @@ WebInspector.ElementSnapshotContentView = function(snapshot)
 
     this._snapshot = snapshot;
 
     function createPathComponent(displayName, classNames, identifier)
     {
         var pathComponent = new WebInspector.HierarchicalPathComponent(displayName, classNames, identifier, false, true);
         pathComponent.addEventListener(WebInspector.HierarchicalPathComponent.Event.SiblingWasSelected, this._pathComponentSelected, this);
         return pathComponent;
     }
 
+    this._combinedPathComponent = createPathComponent.call(this, WebInspector.UIString("Element Snapshot"), WebInspector.ElementSnapshotContentView.CombinedViewIconStyleClassName, WebInspector.ElementSnapshotContentView.CombinedViewIdentifier, false, false);
     this._outputPathComponent = createPathComponent.call(this, WebInspector.UIString("Visual Output"), WebInspector.ElementSnapshotContentView.VisualOutputIconStyleClassName, WebInspector.ElementSnapshotContentView.VisualOutputIdentifier, false, false);
     this._stylePathComponent = createPathComponent.call(this, WebInspector.UIString("Effective Style"), WebInspector.ElementSnapshotContentView.EffectiveStyleIconStyleClassName, WebInspector.ElementSnapshotContentView.EffectiveStyleIdentifier, false, false);
     this._domTreePathComponent = createPathComponent.call(this, WebInspector.UIString("DOM Tree"), WebInspector.ElementSnapshotContentView.DOMTreeIconStyleClassName, WebInspector.ElementSnapshotContentView.DOMTreeIdentifier, false, false);
 
-    // output <-> style <-> dom-tree
+    // combined <-> output <-> style <-> dom-tree
+    this._combinedPathComponent.nextSibling = this._outputPathComponent;
+    this._outputPathComponent.previousSibling = this._combinedPathComponent;
     this._outputPathComponent.nextSibling = this._stylePathComponent;
     this._stylePathComponent.previousSibling = this._outputPathComponent;
     this._stylePathComponent.nextSibling = this._domTreePathComponent;
     this._domTreePathComponent.previousSibling = this._stylePathComponent;
 
     this._currentContentViewSetting = new WebInspector.Setting("element-snapshot-current-view", WebInspector.ElementSnapshotContentView.VisualOutputIdentifier);
 };
 
 WebInspector.ElementSnapshotContentView.ContentViewIdentifierCookieKey = "element-snapshot-content-view-identifier";
 
+WebInspector.ElementSnapshotContentView.CombinedViewIdentifier = "combined-view";
 WebInspector.ElementSnapshotContentView.VisualOutputIdentifier = "visual-output";
 WebInspector.ElementSnapshotContentView.EffectiveStyleIdentifier = "effective-style";
 WebInspector.ElementSnapshotContentView.DOMTreeIdentifier = "dom-tree";
 
 WebInspector.ElementSnapshotContentView.SnapshotIconStyleClass = "snapshot-icon";
+WebInspector.ElementSnapshotContentView.CombinedViewIconStyleClassName = "combined-view-icon";
 WebInspector.ElementSnapshotContentView.VisualOutputIconStyleClassName = "visual-output-icon";
 WebInspector.ElementSnapshotContentView.EffectiveStyleIconStyleClassName = "effective-style-icon";
-WebInspector.ElementSnapshotContentView.DOMTreeIconStyleClassName = "effective-style-icon";
+WebInspector.ElementSnapshotContentView.DOMTreeIconStyleClassName = "dom-tree-icon";
 
 WebInspector.ElementSnapshotContentView.prototype = {
     constructor: WebInspector.ElementSnapshotContentView,
     __proto__: WebInspector.ClusterContentView.prototype,
 
     // Public
 
     get selectionPathComponents()
     {
         var currentContentView = this._contentViewContainer.currentContentView;
         if (!currentContentView)
             return [];
 
         // Append the current view's path components to the path component representing the current view.
         var components = [this._pathComponentForContentView(currentContentView)];
         return components.concat(currentContentView.selectionPathComponents);
     },
 
+    get combinedContentView()
+    {
+        if (!this._combinedContentView)
+            this._combinedContentView = new WebInspector.ElementSnapshotCombinedContentView(this._snapshot);
+
+        return this._combinedContentView;
+    },
+
     get visualOutputContentView()
     {
         if (!this._visualOutputContentView)
             this._visualOutputContentView = new WebInspector.ElementSnapshotOutputContentView(this._snapshot);
 
         return this._visualOutputContentView;
     },
 
     get effectiveStyleContentView()
     {
@@ -122,20 +135,27 @@ WebInspector.ElementSnapshotContentView.prototype = {
     saveToCookie: function(cookie)
     {
         cookie[WebInspector.ElementSnapshotContentView.ContentViewIdentifierCookieKey] = this._currentContentViewSetting.value;
     },
 
     restoreFromCookie: function(cookie)
     {
         this._showContentViewForIdentifier(cookie[WebInspector.ElementSnapshotContentView.ContentViewIdentifierCookieKey]);
     },
 
+    showCombinedView: function()
+    {
+        this._shownInitialContent = true;
+
+        return this._showContentViewForIdentifier(WebInspector.ElementSnapshotContentView.CombinedViewIdentifier);
+    },
+
     showVisualOutput: function()
     {
         this._shownInitialContent = true;
 
         return this._showContentViewForIdentifier(WebInspector.ElementSnapshotContentView.VisualOutputIdentifier);
     },
 
     showEffectiveStyle: function()
     {
         this._shownInitialContent = true;
@@ -150,50 +170,57 @@ WebInspector.ElementSnapshotContentView.prototype = {
         return this._showContentViewForIdentifier(WebInspector.ElementSnapshotContentView.DOMTreeIdentifier);
     },
 
     // Private
 
     _pathComponentForContentView: function(contentView)
     {
         console.assert(contentView);
         if (!contentView)
             return null;
+        if (contentView === this._combinedContentView)
+            return this._combinedPathComponent;
         if (contentView === this._visualOutputContentView)
             return this._outputPathComponent;
         if (contentView === this._effectiveStyleContentView)
             return this._stylePathComponent;
         if (contentView === this._domTreeContentView)
             return this._domTreePathComponent;
         console.error("Unknown contentView.");
         return null;
     },
 
     _identifierForContentView: function(contentView)
     {
         console.assert(contentView);
         if (!contentView)
             return null;
+        if (contentView === this._combinedContentView)
+            return WebInspector.ElementSnapshotContentView.CombinedViewIdentifier;
         if (contentView === this._visualOutputContentView)
             return WebInspector.ElementSnapshotContentView.VisualOutputIdentifier;
         if (contentView === this._effectiveStyleContentView)
             return WebInspector.ElementSnapshotContentView.EffectiveStyleIdentifier;
         if (contentView === this._domTreeContentView)
             return WebInspector.ElementSnapshotContentView.DOMTreeIdentifier;
         console.error("Unknown contentView.");
         return null;
     },
 
     _showContentViewForIdentifier: function(identifier)
     {
         var contentViewToShow = null;
 
         switch (identifier) {
+        case WebInspector.ElementSnapshotContentView.CombinedViewIdentifier:
+            contentViewToShow = this.combinedContentView;
+            break;
         case WebInspector.ElementSnapshotContentView.VisualOutputIdentifier:
             contentViewToShow = this.visualOutputContentView;
             break;
         case WebInspector.ElementSnapshotContentView.EffectiveStyleIdentifier:
             contentViewToShow = this.effectiveStyleContentView;
             break;
         case WebInspector.ElementSnapshotContentView.DOMTreeIdentifier:
             contentViewToShow = this.domTreeContentView;
             break;
         }
diff --git a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotOutputContentView.css b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotOutputContentView.css
index 181b3f5..5fecc40 100644
--- a/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotOutputContentView.css
+++ b/Source/WebInspectorUI/UserInterface/Views/ElementSnapshotOutputContentView.css
@@ -38,17 +38,17 @@
     min-width: 0;
     max-width: 100%;
 
     -webkit-user-select: text;
     -webkit-user-drag: auto;
 
  /* A border is used instead of padding or margin so when there is overflow
     there will be space on all sides. */
     border: 15px solid transparent;
 
-    margin: auto 0;
+    margin: 0 0 auto;
 
     background-image: url(../Images/Checkers.svg);
     background-clip: content-box;
     background-size: 14px;
     background-color: #eee;
 }
-- 
2.3.5

